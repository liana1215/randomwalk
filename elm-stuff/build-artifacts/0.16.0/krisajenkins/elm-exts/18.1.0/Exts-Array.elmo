Elm.Exts = Elm.Exts || {};
Elm.Exts.Array = Elm.Exts.Array || {};
Elm.Exts.Array.make = function (_elm) {
   "use strict";
   _elm.Exts = _elm.Exts || {};
   _elm.Exts.Array = _elm.Exts.Array || {};
   if (_elm.Exts.Array.values) return _elm.Exts.Array.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Array = Elm.Array.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm);
   var _op = {};
   var update = F3(function (n,f,xs) {
      var _p0 = A2($Array.get,n,xs);
      if (_p0.ctor === "Nothing") {
            return xs;
         } else {
            return A3($Array.set,n,f(_p0._0),xs);
         }
   });
   return _elm.Exts.Array.values = {_op: _op,update: update};
};