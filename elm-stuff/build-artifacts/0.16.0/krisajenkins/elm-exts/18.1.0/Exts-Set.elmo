Elm.Exts = Elm.Exts || {};
Elm.Exts.Set = Elm.Exts.Set || {};
Elm.Exts.Set.make = function (_elm) {
   "use strict";
   _elm.Exts = _elm.Exts || {};
   _elm.Exts.Set = _elm.Exts.Set || {};
   if (_elm.Exts.Set.values) return _elm.Exts.Set.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Set = Elm.Set.make(_elm),
   $Signal = Elm.Signal.make(_elm);
   var _op = {};
   var uniqueItems = F2(function (accessor,data) {    return $Set.fromList(A2($List.filterMap,accessor,data));});
   var select = F2(function (f,keys) {    return $List.filter(function (x) {    return A2($Set.member,f(x),keys);});});
   return _elm.Exts.Set.values = {_op: _op,select: select,uniqueItems: uniqueItems};
};